{"ast":null,"code":"var _jsxFileName = \"/Users/danielleblom/HRATX50/FEC_BestBuy/searchbar_service/searchbar/src/App.js\";\nimport React, { useState } from 'react';\nimport Searchbar from './Searchbar';\nimport axios from 'axios';\n\nconst App = () => {\n  // use react hook useState to create a setoptions function associated with changing the state of the options key. Set the options key to an empty array with useState\n  const [options, setOptions] = useState([]); // accept what is being typed in as a parameter and set the state equal to the response\n\n  const getProducts = query => {\n    axios.get(`http://localhost:3001/products/${query}`).then(res => {\n      console.log(res);\n      setOptions(res.data);\n    }).catch(err => {\n      console.log(`Axios error getting all products: ${err}`);\n    });\n  };\n\n  const handleChange = e => {\n    console.log(e.target.value); // each time a letter is typed in, trigger get request to see what products match the typed in text\n\n    getProducts(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Searchbar, {\n    options: options,\n    handleChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/danielleblom/HRATX50/FEC_BestBuy/searchbar_service/searchbar/src/App.js"],"names":["React","useState","Searchbar","axios","App","options","setOptions","getProducts","query","get","then","res","console","log","data","catch","err","handleChange","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAChB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC,CAFgB,CAIhB;;AACA,QAAMM,WAAW,GAAIC,KAAD,IAAW;AAC7BL,IAAAA,KAAK,CAACM,GAAN,CAAW,kCAAiCD,KAAM,EAAlD,EACCE,IADD,CACMC,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAL,MAAAA,UAAU,CAACK,GAAG,CAACG,IAAL,CAAV;AACD,KAJD,EAKCC,KALD,CAKOC,GAAG,IAAI;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAa,qCAAoCG,GAAI,EAArD;AACD,KAPD;AAQD,GATD;;AAWA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1BN,IAAAA,OAAO,CAACC,GAAR,CAAYK,CAAC,CAACC,MAAF,CAASC,KAArB,EAD0B,CAE1B;;AACAb,IAAAA,WAAW,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,GAJD;;AAMA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEf,OAApB;AAA6B,IAAA,YAAY,EAAEY,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CA3BD;;AA6BA,eAAeb,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport Searchbar from './Searchbar';\nimport axios from 'axios';\n\n\nconst App = () => {\n  // use react hook useState to create a setoptions function associated with changing the state of the options key. Set the options key to an empty array with useState\n  const [options, setOptions] = useState([])\n\n  // accept what is being typed in as a parameter and set the state equal to the response\n  const getProducts = (query) => {\n    axios.get(`http://localhost:3001/products/${query}`)\n    .then(res => {\n      console.log(res);\n      setOptions(res.data)\n    })\n    .catch(err => {\n      console.log(`Axios error getting all products: ${err}`)\n    })\n  }\n\n  const handleChange = (e) => {\n    console.log(e.target.value);\n    // each time a letter is typed in, trigger get request to see what products match the typed in text\n    getProducts(e.target.value)\n  }\n\n  return (\n    <div>\n      <Searchbar options={options} handleChange={handleChange} />\n    </div>\n  )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}