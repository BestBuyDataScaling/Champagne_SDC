{"ast":null,"code":"var _jsxFileName = \"/Users/danielleblom/HRATX50/FEC_BestBuy/searchbar_service/searchbar/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport Searchbar from './Searchbar';\nimport SearchResults from './SearchResults';\nimport axios from 'axios';\n\nconst App = () => {\n  const [options, setOptions] = useState([]);\n  const [searchText, setSearchText] = useState('');\n  const [searchResults, setSearchResults] = useState([]); // should pull mock data and store in state as an array\n\n  useEffect(() => {\n    axios.get(`http://localhost:3001/products`).then(res => {\n      setOptions(res.data);\n    }).catch(err => {\n      console.log(`Axios error getting all products: ${err}`);\n    });\n  }, []);\n\n  const handleChange = e => {\n    setSearchText(e.target.value);\n  }; // should query database for relevant search results\n\n\n  const handleSearchSubmit = e => {\n    e.preventDefault();\n    let query = searchText;\n    axios.get(`http://localhost:3001/products/${query}`).then(res => {\n      console.log(res);\n      setSearchResults(res.data);\n      setSearchText('');\n    }).catch(err => {\n      console.log(`Axios error getting all products: ${err}`);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Searchbar, {\n    options: options,\n    handleChange: handleChange,\n    handleSearchSubmit: handleSearchSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SearchResults, {\n    searchResults: searchResults,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/danielleblom/HRATX50/FEC_BestBuy/searchbar_service/searchbar/src/App.js"],"names":["React","useEffect","useState","Searchbar","SearchResults","axios","App","options","setOptions","searchText","setSearchText","searchResults","setSearchResults","get","then","res","data","catch","err","console","log","handleChange","e","target","value","handleSearchSubmit","preventDefault","query"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD,CAHgB,CAKhB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,KAAK,CAACQ,GAAN,CAAW,gCAAX,EACCC,IADD,CACMC,GAAG,IAAI;AACXP,MAAAA,UAAU,CAACO,GAAG,CAACC,IAAL,CAAV;AACD,KAHD,EAICC,KAJD,CAIOC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAa,qCAAoCF,GAAI,EAArD;AACD,KAND;AAOD,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMG,YAAY,GAAIC,CAAD,IAAO;AAC1BZ,IAAAA,aAAa,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACD,GAFD,CAhBgB,CAoBhB;;;AACA,QAAMC,kBAAkB,GAAIH,CAAD,IAAO;AAChCA,IAAAA,CAAC,CAACI,cAAF;AAEA,QAAIC,KAAK,GAAGlB,UAAZ;AAEAJ,IAAAA,KAAK,CAACQ,GAAN,CAAW,kCAAiCc,KAAM,EAAlD,EACGb,IADH,CACQC,GAAG,IAAI;AACXI,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACAH,MAAAA,gBAAgB,CAACG,GAAG,CAACC,IAAL,CAAhB;AACAN,MAAAA,aAAa,CAAC,EAAD,CAAb;AACD,KALH,EAMGO,KANH,CAMSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAa,qCAAoCF,GAAI,EAArD;AACD,KARH;AASD,GAdD;;AAgBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEX,OAApB;AAA6B,IAAA,YAAY,EAAEc,YAA3C;AAAyD,IAAA,kBAAkB,EAAEI,kBAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,aAAD;AAAe,IAAA,aAAa,EAAEd,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CA3CD;;AA6CA,eAAeL,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Searchbar from './Searchbar';\nimport SearchResults from './SearchResults';\nimport axios from 'axios';\n\nconst App = () => {\n  const [options, setOptions] = useState([])\n  const [searchText, setSearchText] = useState('');\n  const [searchResults, setSearchResults] = useState([])\n\n  // should pull mock data and store in state as an array\n  useEffect(() => {\n    axios.get(`http://localhost:3001/products`)\n    .then(res => {\n      setOptions(res.data)\n    })\n    .catch(err => {\n      console.log(`Axios error getting all products: ${err}`)\n    })\n  }, []);\n\n  const handleChange = (e) => {\n    setSearchText(e.target.value)\n  }\n\n  // should query database for relevant search results\n  const handleSearchSubmit = (e) => {\n    e.preventDefault();\n\n    let query = searchText\n\n    axios.get(`http://localhost:3001/products/${query}`)\n      .then(res => {\n        console.log(res);\n        setSearchResults(res.data);\n        setSearchText('');\n      })\n      .catch(err => {\n        console.log(`Axios error getting all products: ${err}`)\n      })\n  }\n\n  return (\n    <div>\n      <Searchbar options={options} handleChange={handleChange} handleSearchSubmit={handleSearchSubmit} />\n      <SearchResults searchResults={searchResults} />\n    </div>\n  )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}